<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>阿掖山：一个博客</title>
    <description>阿掖山：一个博客</description>
    <link>mountaye.github.io/blog/</link>
    <atom:link href="mountaye.github.io/blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 05 Oct 2020 03:51:50 +0000</pubDate>
    <lastBuildDate>Mon, 05 Oct 2020 03:51:50 +0000</lastBuildDate>
    <generator>Jekyll v4.1.1</generator>
    
      <item>
        <title>.py | matplotlib笔记：两种API</title>
        <description>&lt;p&gt;“图”这个字在英语中可以对应好几个词，picture, image, figure, plot… 其中的 plot，意思是展示两组或两组以上的数据之间关系的图像。用时髦一点的话说，就是数据可视化的产物。&lt;/p&gt;

&lt;p&gt;所谓&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;matplotlib&lt;/code&gt;，顾名思义，&lt;del&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mat&lt;/code&gt; 表示山寨 MATLAB&lt;/del&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;plot&lt;/code&gt; 的含义如上所述，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lib&lt;/code&gt; 表示这是 python 的&lt;a href=&quot;http://www.yinwang.org/blog-cn/2017/05/25/dsl&quot;&gt;一个第三方库 (library)，而不是某种领域专用的编程语言 (domain specific languange, DSL)&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;所谓 API，全称是 application programming interface, 应用程序接口，约等于在你有了自己的数据，想调用 matplotlib 来画图的时候，那些需要写在你自己代码里的语句的语法规则。&lt;/p&gt;

&lt;p&gt;因为是代码库，所以在一切开始之前，需要在你的 python 代码开头声明引入&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;plt&lt;/code&gt; 可以换成你喜欢并且不和其他代码冲突的名字，但是这三个字母是大家的约定俗成的，网上的绝大多数示例代码都这么写，&lt;del&gt;照抄就完事了。&lt;/del&gt;&lt;/p&gt;

&lt;h2 id=&quot;matplotlib-的两种-api&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;matplotlib&lt;/code&gt; 的两种 API&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;matplotlib&lt;/code&gt; 有两种 API，（其实还有第 3 种 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pylab&lt;/code&gt;，但它没能经得起时间的检验，已经处于官方极不推荐的状态），分别是：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;基于状态的 (state-based)&lt;/li&gt;
  &lt;li&gt;面向对象的 (object-oriented)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;两种风格混用的话大概率没法玩得转，会产生各种出人意料的输出结果，新手 debug 的能力又比较差，所以最好先选边站队，有时间再学剩下的一个。&lt;/p&gt;

&lt;p&gt;对于有 MATLAB 基础的朋友，基于状态的 API 语法和 MATLAB 几乎一模一样，几乎可以直接上手，当年 python 算是后起之秀，这一招当初就是为了从 MATLAB 那里吸引用户， &lt;del&gt;相当歹毒。&lt;/del&gt; 这套接口本身也比较简单，适合在调试程序的时候快速看一下结果，检查错误。&lt;/p&gt;

&lt;p&gt;对于一般的初学者，matplotlib 的代码本身就是用面向对象的编程范式写成的，学习这套 API 可以更好的理解代码，知道自己究竟在干什么，顺便还可以熟悉一下面向对象的编程范式。现在学 python 之前就会 MATLAB 的人越来越少，网上 &lt;del&gt;可供复制粘贴&lt;/del&gt; 的示例代码越来越多地使用面向对象的语法，学习面向对象的接口也更加实用。&lt;/p&gt;

&lt;h2 id=&quot;两种-api-的相同任务&quot;&gt;两种 API 的相同任务&lt;/h2&gt;

&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;img src=&quot;/blog/assets/photos/2020-10-04_figure-and-axes.png&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;上图来自网上随便找的一篇论文，可以看到，一般我们会把信息相关的几幅小图放在一起，在文章排版的时候，这张组合在一起的图片算作一个单位。在 matplotlib 里面，这样一个基本单位叫做 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;figure&lt;/code&gt;，而每一幅小图叫做 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;axis&lt;/code&gt; （变量名常简写作 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ax&lt;/code&gt;）。平时的单图可以看作只有一个 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;axis&lt;/code&gt; 的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;figure&lt;/code&gt;，多图的时候往往用一个 tuple &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;axes&lt;/code&gt; 的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;__getitem__()&lt;/code&gt; 方法来控制每个子图。&lt;/p&gt;

&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;img src=&quot;/blog/assets/photos/2020-10-04_anatomy-of-figure.png&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;上图&lt;a href=&quot;https://matplotlib.org/gallery/showcase/anatomy.html#anatomy-of-a-figure&quot;&gt;来自官网&lt;/a&gt;，图中的蓝字就是 matplotlib 认为的一张只有一个 axis 的 figure 所包含的元素。&lt;/p&gt;

&lt;p&gt;两种 API 要做的事情，就是建立 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;figure&lt;/code&gt; 和 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;axis&lt;/code&gt;，然后提供函数/方法来生成或者改变各个元素。&lt;/p&gt;

&lt;h2 id=&quot;基于状态-state-based&quot;&gt;基于状态 (state-based)&lt;/h2&gt;

&lt;p&gt;所谓基于状态的 API，不太好解释，前面已经说过，在每个函数前面加上 plt，剩下的就和写 MATLAB 几乎完全一样。&lt;/p&gt;

&lt;p&gt;看&lt;a href=&quot;https://matplotlib.org/tutorials/introductory/pyplot.html#sphx-glr-tutorials-introductory-pyplot-py&quot;&gt;官网给出的教程&lt;/a&gt;，可以观察到两个有趣的现象：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;几乎没有赋值运算符 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;=&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;几乎所有的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.&lt;/code&gt; 前面都是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;plt&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;也就是说，与 matplotlib 相关的命令都是函数，而且不需要将返回值赋给任何变量。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;figure&lt;/code&gt; 和 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;axis&lt;/code&gt; 的概念被隐藏起来了，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;plt.figure()&lt;/code&gt; 建立一个 figure；&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;plt.subplot()&lt;/code&gt;建立多个 axes，并且将程序的注意力放到函数参数指定的子图上；紧跟着的设定各种元素的函数都会作用到之前最新一个 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;plt.subplot()&lt;/code&gt; 所指定的子图上。&lt;/p&gt;

&lt;p&gt;没有赋值说明函数的返回值并不重要，这些函数都会作用在后台维护的 figure 和 axis 的状态机上面，也就是说这些函数都有副作用，不是纯函数。&lt;/p&gt;

&lt;h2 id=&quot;面向对象-object-oriented&quot;&gt;面向对象 (object-oriented)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://matplotlib.org/gallery/showcase/anatomy.html#anatomy-of-a-figure&quot;&gt;作为对比&lt;/a&gt;：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;头几句会有赋值运算符 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;=&lt;/code&gt;，被赋值的变量名一般就是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fig&lt;/code&gt; 和 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ax&lt;/code&gt;。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.&lt;/code&gt; 前面都是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fig&lt;/code&gt; 和 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ax&lt;/code&gt;，其中 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ax&lt;/code&gt; 居多。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fig&lt;/code&gt; 和 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ax&lt;/code&gt; 分别是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;matplotlib.figure.Figure&lt;/code&gt; 和 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;matplotlib.axes.Axes&lt;/code&gt; 两种对象的实例，画图和调整都是在调用两种对象的方法，主要是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ax&lt;/code&gt; 的方法。&lt;/p&gt;

&lt;h2 id=&quot;不同之处-cheat-sheet&quot;&gt;不同之处 Cheat Sheet&lt;/h2&gt;

&lt;p&gt;绝大多数命令，在两种 API 之下的名字都一样，差别就在于开头究竟是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;plt.&lt;/code&gt; 还是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ax.&lt;/code&gt;，但是少数命令不同，下面做了一个表格，进行一个不完全的列举：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;State-Based&lt;/th&gt;
      &lt;th&gt;任务&lt;/th&gt;
      &lt;th&gt;Object-Oriented&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;plt.figure(**args)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;新建 figure&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fig = plt.figure(**args)&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;plt.subplot(**args)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;新建 axis&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ax = fig.add_subplot(**args)&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;好像没有&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;同时新建 figure 和复数 axes&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fig,axes = plt.subplots(**args)&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;plt.title(**args)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;设置 figrue 标题&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ax.set_title(**args)&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;plt.xlabel(**args)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;设置 x 轴名称&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ax.set_xlabel(**args)&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;plt.ylabel(**args)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;设置 y 轴名称&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ax.set_ylabel(**args)&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;plt.xlim(**args)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;设置 x 轴范围&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ax.set_xlim(**args)&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;plt.ylim(**args)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;设置 y 轴范围&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ax.set_ylim(**args)&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;其他不同的命令，以后用到的时候会随手更新。&lt;/p&gt;
</description>
        <pubDate>Sun, 04 Oct 2020 00:00:00 +0000</pubDate>
        <link>mountaye.github.io/blog/articles/py-matplotlib-two-api</link>
        <guid isPermaLink="true">mountaye.github.io/blog/articles/py-matplotlib-two-api</guid>
        
        
        <category>post</category>
        
      </item>
    
      <item>
        <title>.tex | 整理一些关于实验记录的文章</title>
        <description>&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.sciencemag.org/careers/2019/09/how-keep-lab-notebook&quot;&gt;微信公众号“BioArt植物”，原作者 Elisabeth Pain ，《实验记录到底怎么记？》&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://files.eric.ed.gov/fulltext/ED344734.pdf&quot;&gt;Howard Kannare, 《Writing the Laboratory Notebook》&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://web.mit.edu/me-ugoffice/communication/labnotebooks.pdf&quot;&gt;MIT Department of Mechanical Engineering, 《Instructions for Using Your Laboratory Notebook》&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://xw.qq.com/partner/vivoscreen/20200820A00HZI00?vivoRcdMark=1&quot;&gt;微信公众号“生物学霸”，《颜宁：讲讲如何记实验记录》&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;微信平台不允许添加指向微信之外的超链接，资源的获取方式见正文。作为报复，以上四条资源中有两条最早是在公众号里看到的，但是博文给出的链接都来自微信之外 :-)&lt;/p&gt;

&lt;hr class=&quot;slender&quot; /&gt;

&lt;h2 id=&quot;0&quot;&gt;0&lt;/h2&gt;

&lt;p&gt;疫情依旧，摸鱼依旧。摸鱼的方式有很多种，其中比较高级的一种是打着完美主义的旗号，对着一个还没完成，或者根本不存在完成时的东西，疯狂输出时间和精力。琢磨如何完美地进行实验记录就是个挺不错的由头。&lt;/p&gt;

&lt;p&gt;说实话，学界对研究记录的要求实际上并不算严格，这一点在《Writing the Laboratory Notebook》里也有佐证。商业机构研发部门的研究记录会成为将来知识产权争端的主要证据，稍有不慎就是真金白银的经济损失，甚至关乎企业的生死存亡。而学界的工作在“科技”中偏重于”科“（即便是工程学科），在”研发“中偏重于”研“。（四者有什么联系和区别？科学认识世界，技术改造世界，研究把钱变成知识，开发把知识变成钱。）自由比起规范显然更有利于在未知领域的探索。&lt;/p&gt;

&lt;p&gt;所以，我们实验室对于实验记录并没有成文的规则，大家自己找本子自己记，格式和内容都跟随自己的喜好来，同实验室的同学也很少交流这个问题，仿佛说了就是承认自己的科研能力有问题。&lt;/p&gt;

&lt;h2 id=&quot;1&quot;&gt;1&lt;/h2&gt;

&lt;p&gt;越不谈越是心虚，于是在看到了《实验记录到底怎么记？》这篇文章之后，下决心要处理掉这个问题。这篇文章的作者访谈了几个科研人员，然后将他们的对话打碎，分到四个问题之下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;为什么还要花时间精力去做实验记录？&lt;/li&gt;
  &lt;li&gt;用传统纸质的记录本，还是电子版，还是都有？&lt;/li&gt;
  &lt;li&gt;采取什么策略来保证实验记录有条理、完整并且实用？&lt;/li&gt;
  &lt;li&gt;其他……&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;并不推荐这篇文章，原因从这四个问题就能看出来：第一条属于幸存者偏见，一个觉得记录不重要的人压根不会认真记录，从而很难成为访谈对象；第二条属于典型的”有的人……有的人……“英式废话文套路；第三个问题太笼统，本应该细分为更明确的子问题；最后一个“其他”说明作者都不知道该怎么总结这些对话。明明是一篇文章，硬生生写出了微博一般的碎片感。&lt;/p&gt;

&lt;h2 id=&quot;2&quot;&gt;2&lt;/h2&gt;

&lt;p&gt;于是在网上继续找资源，机缘巧合之下，在一个知乎问题之下看到了一个还不错的答案，里面提到了 Howard Kannare 的《Writing the Laboratory Notebook》这本书。真的是“机缘巧合”，因为现在的我已经找不到原来的那个问题和答案了，哪怕专门为了这篇文章搜索了半天……这说明了网络资源的收藏和管理也是一个技术活（又可以水一篇文章了）。&lt;/p&gt;

&lt;p&gt;这本书在网上有英文的完整影印版，很容易就能搜到，实在不行的话在微信后台留言”HowardKannare”可以收到下载网址（注意回复的关键词没有空格）。&lt;/p&gt;

&lt;p&gt;本书各章的标题如下：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The Reasons for Note keeping - An Overview&lt;/li&gt;
  &lt;li&gt;The Hardware of Note keeping - Books, Pens, and Paper&lt;/li&gt;
  &lt;li&gt;Legal and Ethical Aspects - Ownership, Rights, and Obligations&lt;/li&gt;
  &lt;li&gt;Management of Notekeeping - Practices for Issuance, Use, and Storage of Notebooks&lt;/li&gt;
  &lt;li&gt;Organizing and Writing the Notebook - Be Flexible&lt;/li&gt;
  &lt;li&gt;Examples of Notebook Entries&lt;/li&gt;
  &lt;li&gt;Patents and Invention Protection&lt;/li&gt;
  &lt;li&gt;The Electronic Notebook&lt;/li&gt;
  &lt;li&gt;Appendix A: Some Suggestions for Teaching Laboratory Notekeeping&lt;/li&gt;
  &lt;li&gt;Appendix B: Photographs from the Historical Laboratory Notebooks of Famous Scientists&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;书很长，有 150 多页，这导致内容涉及方方面面，包括了那些我们可能不是那么急需的方面；还有很多我们今天可能并不十分需要的冷知识，比如几十年前美国出产的纸张由于某种工艺导致保存期限比较短等等。好在多数章节最后都有总结，可以帮人省下不少时间。&lt;/p&gt;

&lt;p&gt;另一方面，这本书出版于1985年，那是一个什么年代呢？苹果在前一年才刚刚推出了 Macintosh 电脑，C++ 在当年才刚刚出版。所以对于电子实验记录，书中只在第8章和纸本笔记进行了一个简单的对比，而且有比较明显的时代局限性。&lt;/p&gt;

&lt;p&gt;总之，如果真要读这本书的话，抱着练习英语阅读的目标，要远比学记笔记要少些失望。&lt;/p&gt;

&lt;h2 id=&quot;3&quot;&gt;3&lt;/h2&gt;

&lt;p&gt;干了半天之后开始怀疑这件事从一开始是否有必要，这可是 PhD 的保留节目了。&lt;/p&gt;

&lt;p&gt;尤其是在读过《Writing the Laboratory Notebook》的第5章之后，读到单篇实验报告应该包括 introduction, experimental plan, observations and data, discussion of results 的时候，恍然发现，这不就是本科实验课要交的实验记录的写法吗，之所以没有老师教过我们怎么记实验记录，是不是因为他们觉得这个事情已经教过了？&lt;/p&gt;

&lt;p&gt;既然如此，那么第三份材料就是 MIT 机械系给本科生的实验报告要求，不长，只有 6 页，还包括了超过两页的模板笔记，可以当作《Writing the Laboratory Notebook》关于笔记内容部分的精华集锦来看。微信后台回复 “MITlab” 可以收到 PDF 下载地址。&lt;/p&gt;

&lt;p&gt;但这反而说明了，PI们散养研究生，不对实验记录进行更进一步的要求和培训是不对的。因为“实验记录本”≠“实验记录们”，研究生的工作不同于本科实验课，本科生做实验就只有在固定时间和固定时长的实验课上，一切超出规定范围内的动作大概率都是无用功甚至错误，每个实验要做什么，有哪些步骤，会观察到什么现象，都是事先设计好的，实验记录的各个部分会有哪些内容，大体上没跑。研究生的工作则不然，大到整个博士期间的所有工作都可以算作是一个项目（毕竟会写成一篇毕业论文），小到显微镜从开机到观测到关机的几个小时也可以整出一篇报告来，如何划分研究的基本单元？一个人可能同时在做相对独立的多项工作，是连续记录还是分开平行记录？以纸本为主，电子版主要用于备份，还是主要用电子设备，随手记在纸上的拍照作为附件？&lt;/p&gt;

&lt;h2 id=&quot;4&quot;&gt;4&lt;/h2&gt;

&lt;p&gt;对于这篇文章没有太多可说的，覆盖范围和《实验记录到底怎么记？》类似，感觉就相当于颜宁女士自己一个人对那篇文章中的问题的回答，由于是一个人的回答，所以不会有前一篇文章中不同观点混在一起的分裂感。看过了《Writing the Laboratory Notebook》之后，会发现文中的每一个点都在书中可以找到。&lt;/p&gt;
</description>
        <pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate>
        <link>mountaye.github.io/blog/articles/lab-note</link>
        <guid isPermaLink="true">mountaye.github.io/blog/articles/lab-note</guid>
        
        
        <category>post</category>
        
      </item>
    
      <item>
        <title>.doc | 人生是马尔科夫过程吗？</title>
        <description>&lt;p&gt;最近报名了一个写作班，老师留了作业，命题作文——“我想怎样地度过余生”。&lt;/p&gt;

&lt;p&gt;我在电脑上敲下了一句“我想随遇而安地度过余生”，然后抓耳挠腮地度过了三天当时的我的余生，什么也没写下来。&lt;/p&gt;

&lt;p&gt;然后，疫情嘛，研究上的事，能在家里做的已经做得差不多了。闲来无事翻翻邮件订阅的论文摘要合辑，看到了一篇讲量子态马尔科夫演化的论文，于是想到了一个很有趣的问题：人生是一个马尔科夫过程吗？&lt;/p&gt;

&lt;p&gt;先等一下，马尔科夫过程是什么？&lt;/p&gt;

&lt;p&gt;用一个生活中的例子来解释吧。假设我们有一个感兴趣的对象（比如说我现在使用的牙膏的牌子）；这个对象有几种不同的可能性（我去的超市里有两种牌子，我可以但也只能选择其中的一种）；每过一段时间，这个对象有可能变化（每管牙膏用完之后，去超市再买一管，要么换牌子，要么不换）。&lt;/p&gt;

&lt;p&gt;重点来了：如果当我在货架面前考虑要买哪个牌子牙膏的时候，只考虑我现在用的是什么牌子，而不考虑上次买牙膏之前那管是什么牌子，不考虑之前任何一段时间用的是什么牌子，那么我使用的牙膏的牌子随时间的变化，就是一个马尔科夫过程。&lt;/p&gt;

&lt;p&gt;也就是维基百科上所说的：“未来的状态与任何历史的状态无关，仅与当前状态相关”。&lt;/p&gt;

&lt;p&gt;这么一说的话，人生还真的挺像是马尔科夫过程的。&lt;/p&gt;

&lt;p&gt;今天认识我的朋友可能想象不出来，我小学的时候还是个很听话的乖孩子。坐我后桌的小豪也很听话，班主任很信任我们几个孩子，经常让我们帮忙干点活儿，平时考试之后改改卷子啊，上面下来检查之前收拾收拾同学们的作业之类的。六年级下学期的某一天，老师放学后又把我们几个人留了下来，给了我们一叠材料，仔细一看，有一摞表格，上面是全班同学姓名和家庭住址的表格，前几天发给每个人回家填了，第二天连同房产证一起交上，房产证很快发回来了，表格在这；还有一张本市本区的地图，道路标的还挺详细的，道路围成的方块上标着不同的数字。我们的任务就是根据家庭住址，把大家的名字和地图上的数字对应起来，填到一张新表上。我和小豪的家有点距离，在地图上的数字也不一样。等我们拿到了不同初中的录取通知书，才后知后觉，当初那些数字代表的就是所谓的学区。高中之后骑车上学，有天早晨，在到校之前的最后一个路口等红灯的时候，眼睛余光觉得旁边等灯的人老是看我，我也看过去，端详许久，是小豪！我们都长出了一口气，不知道是舒气还是叹气。&lt;/p&gt;

&lt;p&gt;因为一个学区号，原本要好的朋友再相见，就只能努力注视然后努力回忆，再报以礼貌的微笑了；因为一场中考，因为一场高考，因为考研或是考公务员或是招聘面试，三年、四年、几十年的时间里，我们能做的事情就大体定下来了。至于在这决定未来的考试之前的每一个平凡一天里，我们的生活充实吗，枯燥吗，快乐吗，累吗，见到许久未见的老朋友了吗，不好意思，不太重要。&lt;/p&gt;

&lt;p&gt;所以说，把人生当成一个马尔科夫过程的话，一个很自然的推论就是，我只要在这些时间节点上，让自己拥有这些节点所考察的那些成绩，就可以在人生这条长河里一路顺风顺水，幸福美满了。&lt;/p&gt;

&lt;p&gt;大一结束的暑假，我们班的导师老史带我们去北京参观几个科研院所，用他的原话说，“见见世面”。从正负电子对撞机里出来的时候是下午，还有点时间，我们就去了北大。北大接待我们的老师是我们热学课本的作者，那是我第一次亲眼见到写教材的人，一种“我也见到大人物了”的自豪感油然而生。这样的参观活动本来也有为将来的保研做广告的意思，作者老师把我们引入一间教室，拿出了准备好的幻灯片。北大嘛，客观地指点指点江山就足以作为广告了。江山指点得差不多了，还没有看到我们学校的名字，老师大约也注意到了：“你们学校啊，还是差了一点。”老史也和我们坐在一起，除了点头也说不出话来。又有同学问，既然已经有这么大的差距了，那该怎么弥补呢？老师面带微笑地说：“人生啊还是很长的，你们现在虽然落后很多，但是一直努力的话，比别人晚个几年十几年，也是有希望达到同样高度的嘛。”我当时自然心里一百个不服，拳头在桌子后面攥得紧紧的。临走的时候，作者老师还问了一句：“我那本课本是写给非专业的课程用的，你们专业用这个，是不是浅了一点啊？”我很幸运，没看到史老师脸上的表情。&lt;/p&gt;

&lt;p&gt;反过来说，只要在某一个时间节点上没有做好，之后的人生就可以洗洗睡了。&lt;/p&gt;

&lt;p&gt;但是，人生也并不总是能简化成马尔科夫过程的。&lt;/p&gt;

&lt;p&gt;乔布斯在斯坦福大学的毕业典礼上做过一个演讲，讲过他读书时候的故事。领养乔布斯的夫妻当初答应了他的生母，一定要让孩子上大学。乔布斯年轻时也不知道父母的艰难，选了里德学院这样一所学费高昂的私立学校，很快就把父母给的钱花光了，只能退学。退学之后没有了学分要求，他得以选一些轻松有趣的课程，比如字体设计。等到后来兜兜转转，他被苹果公司开除，成功建立了 Pixel 动画公司和 NeXT 电脑公司，之后回到了经营不善来到破产边缘的苹果。这时候，之前的字体课派上了用场，苹果的新电脑取得了巨大的成功，优雅的字体居功至伟。&lt;/p&gt;

&lt;p&gt;人生并不是一个预先设计好的程序，也不是一台严丝合缝的机器，我们经历过的故事，有的深藏在记忆里，在不经意的时候闪现，击中我们；有的成为心中高悬的苦胆，时时提醒激励着人，去做一些可能徒劳但又不甘心的事情。&lt;/p&gt;

&lt;p&gt;北大的故事其实没有结束。当初提问该如何奋起直追的同学转到了数学专业，而一直志在生物的我反而留在了物理圈里。大四的时候，听说北大一个物理和生物的交叉学科项目还有一次补充录取的机会，申请美国学校结果不太满意的我就报了名。面试的一个环节是读一段英文学术论文的节选，然后根据材料回答几个问题。我抽到的文章是关于 microbiome （微生物组）的，老师们知道我的专业背景，本来没打算我回答得出什么问题，没想到我平时读过一些科普文章，对这个话题有些了解，老师的问题都很顺利地回答了出来。他们很意外，问我是怎么积累这些知识的，我很想给他们讲讲三年前那个下午，隔壁系教室里的故事。&lt;/p&gt;

&lt;p&gt;又觉得什么也不必讲，于是微笑着谦虚了两句。&lt;/p&gt;
</description>
        <pubDate>Sun, 05 Jul 2020 00:00:00 +0000</pubDate>
        <link>mountaye.github.io/blog/articles/how-to-spend-life</link>
        <guid isPermaLink="true">mountaye.github.io/blog/articles/how-to-spend-life</guid>
        
        
        <category>post</category>
        
      </item>
    
      <item>
        <title>.doc | 接机</title>
        <description>&lt;p&gt;今年寒假，疫情引而未发之时，爸妈来美国看我。&lt;/p&gt;

&lt;p&gt;他们英语不好，担心转机的时候不顺利，所以定了直飞芝加哥的机票，傍晚到，我早上出发开车去接他们。因为是一个人开车，手机定了计时，每隔一两个小时就离开高速停车休息一会儿。&lt;/p&gt;

&lt;p&gt;一路基本顺利，除了进城之后。前面几个收费站把硬币花完了，接下来的收费站没带够硬币，又误入人工硬币收费关卡，被收费大妈批了一顿之后滚蛋了，回去之后在网上补缴了费用；到机场之后，想到之前收费站的事，在航站楼里的小卖部买了包巧克力糖，换了一堆零钱；发现停车的航站楼不是爸妈要停靠的那个，导航又不明确，只能开车离开停车场，一边慢行一边看路牌。到了正确的航站楼，距离爸妈的飞机到达还有一个多小时。芝加哥当天极冷，于是也不好在周围闲逛，就只在接机口站着等。&lt;/p&gt;

&lt;p&gt;倒是没有着急，盯着出站口被人推开又自己关上的门，呆若木鸡，一种在被人漠视和假装无感于漠视中锻炼出来的，故作少年老成的冷漠表情。一会儿就要见到爸爸妈妈了，我会拥抱他们吗，会一惊一乍地嘘寒问暖吗，会有一股暖意从心底涌上心头吗？&lt;/p&gt;

&lt;p&gt;想来本科的时候，爸妈也是这样在等我的。那时候家乡还没有通高铁，去学校的时候坐的是夕发朝至的绿皮车，回家的时候动车票买到邻近的城市，爸妈开车到高铁站接我。有时候在高速的服务区吃饭，有时候他们先吃过了，来的路上买必胜客或者肯德基的套餐，这样我在车上就把午饭解决了。&lt;/p&gt;

&lt;p&gt;事情也不是一开始就这么顺利的。第一年寒假的时候，当时那个高铁站也才刚通车不久，出站口的广场和地下通道还扎着脚手架，第一次来这个车站，我有点找不清方向。打电话问他们，我爸习惯说东西南北，我只认识前后左右，指挥了半天又绕回了原地，我爸开始急了，吼了起来。我也不甘示弱，挂了电话，直奔汽车售票处要自己买票回家。拖着行李箱到了站台上，一路上手机一直在响。接了电话，那边爸爸的声音还是很强硬，但明显有一种不敢再发怒的谨慎。这是最容易让人蹬鼻子上脸的，我直接吼了一句“老子就是要让你不爽！”，又把电话挂了。&lt;/p&gt;

&lt;p&gt;挂完电话之后就后悔了，真的要自己回家吗？架总要吵完的，回家之后，该怎么收场呢？于是就在周围人的目光中离开站台，脸红得很，也不知道是冻，是怒，还是羞愧。离开站台后给妈妈打电话，重新核对周围的建筑位置，终于在广场去地下停车场的楼梯旁边会合。见面的时候，妈妈刚想说话缓解气氛，我先给了爸爸一个拥抱。然后找了一家餐厅吃饭，回家，比无事发生还更加其乐融融。后来回学校之后，爸爸在网上跟我告状，说妈妈因为这个拥抱嫉妒他，找了他好几次茬。&lt;/p&gt;

&lt;p&gt;父母和孩子的关系，在绝大多数时间里都是极不对等的权力关系，而且是总有一天要从一种不对等逆转成另一种不对等的权力关系。我们家和舅舅家住的近，所以常走动。表弟出生的时候，舅舅年纪已经不小了，表弟刚会走路的时候，在我们家小区的草坪上，鬓角已有白发的舅舅在表弟面前S形跑，双臂向后伸，嘴里念着小鸟小鸟飞。高中的语文老师讲课爱跑题，讲李密《陈情表》的时候，他感慨说人的衰老就像是时间的逆转一样，老人越来越像一个孩子，越来越需要子女像当初的父母一样照顾他们。不久，老师请了短假，回来后左臂上多了一块黑色的孝牌。《请回答1988》里面，德善的爸爸很因为总是忽视德善而道歉，说爸爸也是第一次当爸爸。可是，哪有那么容易的道歉呢，孩子也是第一次做孩子，有些愧疚连愧疚的资格都没有，只能在比无事发生还更加其乐融融的气氛里，被时间抛在身后。&lt;/p&gt;

&lt;p&gt;广播报出了他们飞机的班次，出站的人流渐渐拥挤又渐渐稀疏，在他们看到我之前，我先看到了他们，对眼前的陌生有些茫然，面有疲倦之色。我接过他们的行李箱，“还顺利吗？”“挺顺利的。”天很冷，出航站楼之后我们都打了哆嗦，快步往停车场去。&lt;/p&gt;
</description>
        <pubDate>Fri, 05 Jun 2020 00:00:00 +0000</pubDate>
        <link>mountaye.github.io/blog/articles/parents-visiting</link>
        <guid isPermaLink="true">mountaye.github.io/blog/articles/parents-visiting</guid>
        
        
        <category>post</category>
        
      </item>
    
      <item>
        <title>.ijm | 用 ImageJ 给大卫量尺寸</title>
        <description>&lt;p&gt;前两天看果壳，推送的头条是《古代雕塑的丁丁真的都（像大卫）那么小吗？》，为了立论，作者根据图片测量了大卫像的丁丁长度，虽不十分精确，但是好歹有个定量的结果——“4厘米不到”，还给出了使用的工具——ImageJ。&lt;/p&gt;

&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;img src=&quot;/blog/assets/photos/2020-04-25_guokr-quote.png&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;怎么做到的，咱也来试试？&lt;/p&gt;

&lt;h2 id=&quot;imagej-是啥&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ImageJ&lt;/code&gt; 是啥？&lt;/h2&gt;

&lt;p&gt;上一篇文章（&lt;a href=&quot;/blog/blog/articles/raw-image-or-not&quot;&gt;《“你这是不是原图直出啊？”》&lt;/a&gt;）我们提到了，专业相机可以记录 RAW 格式的图片，这类图片包含的信息比平时常见的图片更多，也需要专门的软件进行处理。不只是消费者水平的相机，实验室里的显微镜、CT机都可以看作是特殊的照相机，它们产生的图像自然也需要专业的软件来读取和处理。&lt;/p&gt;

&lt;p&gt;ImageJ 就是这样一款软件。相比于直接使用编程语言（比如 MATLAB，python 的 scikit-image 模块），它提供的方框、多边形、椭圆选区工具，直接用编程语言来替代的话要麻烦许多；而且各种操作的结果都可以几乎实时地反馈在画面上，不需要一遍又一遍地 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;imshow()&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;ImageJ 用 Java 写成，所以跨平台的表现一致，&lt;del&gt;用户界面有一股浓郁的 Windows 95 风味，而且在 MacOS 上也一样，Windows 用户幸灾乐祸中&lt;/del&gt;。代码开源在 GitHub，免费，能让用户知道自己的每个操作究竟在干啥，而且可以自己开发拓展功能，打包成第三方的发行版。我们今天要用的 Fiji，就是一个集成了很多常见拓展功能的 ImageJ 发行版。&lt;/p&gt;

&lt;h2 id=&quot;具体怎么量&quot;&gt;具体怎么量？&lt;/h2&gt;

&lt;p&gt;先简单列举一下步骤，详细介绍在后面：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;下载大卫像的正面照。&lt;/li&gt;
  &lt;li&gt;运行 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ImageJ&lt;/code&gt;，打开图片。&lt;/li&gt;
  &lt;li&gt;复制图片，防止我们的操作改变原始数据。&lt;/li&gt;
  &lt;li&gt;用矩形选择框选定大卫像从头到脚的区域，记录选择框的高度。&lt;/li&gt;
  &lt;li&gt;用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Analyze -&amp;gt; Set Scale&lt;/code&gt; 工具确定像素和厘米的换算关系。&lt;/li&gt;
  &lt;li&gt;用直线工具画出要测量的距离，从主面板读取长度。&lt;/li&gt;
  &lt;li&gt;用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Analyze -&amp;gt; Tools -&amp;gt; Scale Bar...&lt;/code&gt; 绘制比例尺。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果你看到这么简略的介绍就能脑补出如何操作，那么就可以 &lt;del&gt;（关掉这篇文章）&lt;/del&gt; 跳过下面的详细介绍了。&lt;/p&gt;

&lt;p&gt;我们使用的照片来自维基百科的“大卫像”汉语词条，图片作者是 Jörg Bittner Unna，根据 CC-BY-3.0 协议共享。我们下载的是中等尺寸（480×720）的图片：&lt;/p&gt;

&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;img src=&quot;/blog/assets/photos/2020-04-25-david.jpg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;鼠标右键单击画中的任意一点，在弹出的菜单中选择 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Duplicate&lt;/code&gt;，在对话框中选确定，这样我们就得到一张原图的副本。之后的所有操作都在这个副本上进行，这样即便有任何操作失误，对副本做出了不可逆转的伤害，都不会影响到我们的原始数据。如果数据的安全和完整得不到保证，无意之失叫做学术错误，有意为之叫做学术造假。&lt;/p&gt;

&lt;p&gt;选择工具栏中的矩形选择框（图中主面板左一的阴影按钮），在图中画出一个矩形，上下边分别是大卫像的头顶和脚底，&lt;strong&gt;画完后鼠标不要乱动&lt;/strong&gt;，然后在主面板的底部读出高度 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;h=595&lt;/code&gt;，此处的单位是像素：&lt;/p&gt;

&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;img src=&quot;/blog/assets/photos/2020-04-25_find-height.png&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;点击主面板的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Analyze&lt;/code&gt; 按钮，在下拉菜单中找到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Set Scale&lt;/code&gt;，在弹出的对话框中，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Distance in pixels&lt;/code&gt; 填入我们读出的 595 像素，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Known distance&lt;/code&gt; 和 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Unit of length&lt;/code&gt; 填入作者假设的 150 cm：&lt;/p&gt;

&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;img src=&quot;/blog/assets/photos/2020-04-25_set-scale.png&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;然后就可以开始正式的测量了。再次使用矩形选择工具，&lt;strong&gt;画完后鼠标不要乱动&lt;/strong&gt;，主面板底端的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;length=20.93&lt;/code&gt; 就是以 cm 为单位的距离了：&lt;/p&gt;

&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;img src=&quot;/blog/assets/photos/2020-04-25_measure-head.png&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;丁丁可以选中直线工具（左起第五个），用鼠标拖拽的方法画线，主面版的底端也会显示结果。&lt;/p&gt;

&lt;p&gt;量完之后，要想方便他人，可以在图上画出比例尺。再次点击主面板的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Analyze&lt;/code&gt; 按钮，在下拉菜单中找到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Tools&lt;/code&gt;，然后找到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Set Scale&lt;/code&gt;，在弹出的对话框里选择合适的选项，然后点击确定，就可以在画面中添加一个比例尺：&lt;/p&gt;

&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;img src=&quot;/blog/assets/photos/2020-04-25_menu-scale-bar.png&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;如果对操作满意的话，就可以保存图片了。&lt;del&gt;（我对这个结果不满意，所以直接没有保存就退出了。）&lt;/del&gt; 原图没有改动，可以直接关闭，软件应该也不会发表反对 &lt;del&gt;（通知书）&lt;/del&gt; 对话框。&lt;/p&gt;

&lt;h2 id=&quot;量出来个几&quot;&gt;量出来个几？&lt;/h2&gt;

&lt;p&gt;我们的截图显示，按照 150 厘米的身高，大卫的头颅对应的长度是 20.92 厘米。&lt;/p&gt;

&lt;p&gt;对于丁丁，由于图片中的阴影部分对起止点的认定有很大的干扰作用，几次测量的结果都不相同，最小值是 3.91 厘米，最大值是 4.45 厘米。&lt;/p&gt;

&lt;h2 id=&quot;这么量对吗&quot;&gt;这么量对吗？&lt;/h2&gt;

&lt;p&gt;我们的结果和原文有一定不同，但处于同一数量级 &lt;del&gt;（废话）&lt;/del&gt;。由于原文并没有介绍自己使用的数据来源，原文中的图片本身并不适合测量这个数据（下面会讨论），而且还给关键区域加了遮挡，所以我们无从比较两个结果的差异。&lt;/p&gt;

&lt;p&gt;对于我们自己的测量，我们可以对如下几个误差来源进行讨论：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;相机视差&lt;/li&gt;
  &lt;li&gt;深度误差&lt;/li&gt;
  &lt;li&gt;关于大卫身高的假设&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;相机视差&quot;&gt;相机视差&lt;/h3&gt;

&lt;p&gt;我们在几何光学里学的相机成的是倒立的实像，物高和像高之间的关系按照牛顿公式取决于物距、像距、透镜的焦距等等知识，都用到了“傍轴条件”这一假设。换句话说，考虑的都是理想状态，要想满足这种理想状态，基本相当于要求镜片的直径无限大，厚度无限小，焦距还可以是任意值。&lt;/p&gt;

&lt;p&gt;我们的相机显然不满足这种理想状态（简单证明，理想状态下大卫像和后面的墙壁显然不可能同时被同一个透镜组严格地在同一个平面上成像）。景深范围内，不同深度的物体都可以在图中成像，但是存在着透视关系。同样长度的物体，在不同的深度下，在图片上的成像的长度不同；在画面中央的长度，和在画面边缘时的成像长度也不同。B 站里的摄影师们拍小姐姐的时候，脸尽量靠近画面中间，腿一般出现在画面边缘，就是利用广角镜头的透视效应。&lt;/p&gt;

&lt;p&gt;我们的照片目测是用中长焦镜头拍摄的，透视变形不是很明显，但是在测量雕像身高的时候还是遇到了困难，我们用的是脚尖到头顶的距离，如果取脚的中间的话结果就会短一些。&lt;/p&gt;

&lt;h3 id=&quot;深度误差&quot;&gt;深度误差&lt;/h3&gt;

&lt;p&gt;我们的照片是二维的，所以之前的测量，相当于假设被测距离的起点和终点在同一深度上。如果两点之间有一个深度差，那么测量线、深度差、实际距离三条线会构成一个直角三角形，实际距离需要按照勾股定理进行计算。我们这里得不到深度差，所以这一误差就成了一个系统误差，而且是有偏 (biased) 的，真实结果不小于测量值。&lt;/p&gt;

&lt;p&gt;我们选取的照片几乎平视着整座雕像，尤其是我们比较关注的部位，所以深度差几乎可以忽略；果壳提供的图片是仰视的，所以如果这就是测量所用的照片的话，误差应该比我们更大。当然了，还是由于作者没有公布数据和方法，以及原文中图片有马赛克，这种比较没有意义。&lt;/p&gt;

&lt;h3 id=&quot;关于大卫身高的假设&quot;&gt;关于大卫身高的假设&lt;/h3&gt;

&lt;p&gt;开头的文章截图已经给出了将大卫像对应的身高定为 150 cm 的理由，我们来看一下，这个理由成立吗？&lt;/p&gt;

&lt;p&gt;文中说“这相当于现代12岁男童的平均身高”，但是米开朗基罗真的是以 12 岁的人体为原型来创作的吗？我们为什么量了一下大卫的头高呢？是为了算头身比。大卫像头身比是 1:7.5，这已经几乎是一个成年人的比例了。艺术作品为了凸显对象的某些特点和气质，某些特点不符合原型的设定，这在艺术上是完全可能而且可以接受的。《红楼梦》书中的绣像，后来的电视剧中演员的服化道，几乎都比原书的年龄设定更成熟。&lt;/p&gt;

&lt;p&gt;像是某一器官的大小，其衡量标准应该是相对于某个基准的（比如体长）的比值，也就是一个无量纲的量。像是4厘米这种带有长度量纲的量，虽然的确是能比一个比例更容易让人有直观的感受，但是结论很容易因为对身高的质疑而动摇。&lt;/p&gt;

&lt;p&gt;最后，我觉得最致命的一个问题是，大卫像其实是文艺复兴时期的作品，和罗马仿希腊的艺术品一样，是一个其他文明模仿希腊的产物，而且模仿的过程中融入了很多近代人文主义的精神。这一题材也并非来自于希腊文化，大卫击杀歌利亚是犹太教-基督教文化中的故事。在这种情况下，作者应该额外论证文艺复兴对丁丁的描写照搬了希腊文化的习俗。既然如此，为什么不直接找一个古希腊时期的古希腊作品呢？&lt;/p&gt;

&lt;p&gt;而且原文中有“你也许会说大卫像也许只是一个个例，万一只是米开朗基罗的恶趣味呢？一个例子不能说明古希腊雕塑里的小丁丁都很小”字样，不好意思，米开朗琪罗的作品不是古希腊雕塑的“一个例子”。&lt;/p&gt;

&lt;h2 id=&quot;课后作业&quot;&gt;课后作业&lt;/h2&gt;

&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;img src=&quot;/blog/assets/photos/2020-04-25_horseman.jpg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;上图是法国画家雅克-路易·大卫的作品《跨越阿尔卑斯山圣伯纳隘道的拿破仑》，请根据该作品完成下列题目：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;请寻找资料估测马的体长，并据此估测拿破仑的身高。&lt;/li&gt;
  &lt;li&gt;请寻找拿破仑身高相关的史料，并据此估测马的体长。&lt;/li&gt;
  &lt;li&gt;比较前两题的结果。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;啥？你说拿破仑当时骑的是一头驴？哦，那没事了，下课！&lt;/p&gt;
</description>
        <pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate>
        <link>mountaye.github.io/blog/articles/measure-david-with-imagej</link>
        <guid isPermaLink="true">mountaye.github.io/blog/articles/measure-david-with-imagej</guid>
        
        
        <category>post</category>
        
      </item>
    
      <item>
        <title>.jpg | “你这是不是原片直出啊？”</title>
        <description>&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;img src=&quot;/blog/assets/photos/2020-03-14_main.jpg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;经常逛和摄影有点相关但又没那么相关的网站的话（比如豆瓣），会发现很多拍的很不错的照片下面，经常会有人问：“这是不是原片直出啊？”当然，有些人的确就是想知道这样一个事实，这并不是一个很过分的问题（但也不是一个好问题，下面会进一步讨论），有些人问的时候就很不客气了：&lt;/p&gt;

&lt;p&gt;“你这照片是 P 过的吧？假的吧！”&lt;/p&gt;

&lt;p&gt;想回应这样的质疑，首先需要解释，什么叫“原片直出”。&lt;/p&gt;

&lt;p&gt;我们生活在数码时代，所谓的照片，其实都是可以被电脑读取的一个个文件，这些文件的底层，都是一串串0和1组成的二进制数据。但即便有这种共性，不同的组织依然提出了不同的技术标准来表示图片，也就是告诉电脑如何将这串0和1解释成“给我在屏幕上画出一块方形空间，这里涂成黄色，那里涂成浅绿色……”。这直观地体现在，不同的照片可能有不同的拓展名，比如 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.jpg&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.png&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.tif&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.arw&lt;/code&gt; 等等。&lt;/p&gt;

&lt;p&gt;我们日常的文档和网页中，常用的图片格式一般是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.jpg&lt;/code&gt; 等等，这些格式的图片占用的空间小，读取速度快，但是包含的信息量少。专业相机能够捕捉到的信息量要大很多，只往存储卡里写入&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.jpg&lt;/code&gt;的图片实在是太浪费相机的性能了，所以不同的厂家会根据自己的相机设计特定的图片格式，这类图片格式统称为 &lt;a href=&quot;https://zh.wikipedia.org/wiki/RAW&quot;&gt;RAW (原始图像文件)&lt;/a&gt;。比如我现在使用的索尼相机，它的 RAW 图片的拓展名就是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.arw&lt;/code&gt;。专业相机一般允许拍摄时同时保存 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.jpg&lt;/code&gt; 图片和 RAW 图片。这类相机写入存储卡的图像，就是上面所说的“原片”。&lt;/p&gt;

&lt;p&gt;RAW 格式的图片，一般电脑上的图片查看软件是打不开的，所以要导入到（以 PhotoShop 为代表的）专业的图片处理软件中，再导出成日常可用的格式。那么“直出”也就有两种理解：直接把相机保存的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.jpg&lt;/code&gt;格式的图片拿来用，此其一；RAW 格式导入图片处理软件之后不做任何处理，直接导出成&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.jpg&lt;/code&gt;，此其二。&lt;/p&gt;

&lt;p&gt;这么解释下来，我们大约可以回来看看“只要用过图片处理软件就是作假”这种观点了。&lt;/p&gt;

&lt;p&gt;摄影的对象是三维空间内的物体，而照片只是被摄对象的一个二维投影（至少按照我们今天的科技水平是这样），所以所谓真实，必然不可能是完全复制出被摄对象，而最多只能是反映出对象的某些特征。作为和相机一起目睹被摄对象的摄影师，在实际操作中根据自己的记忆进行调整，向看到图片的观众呈现自己看到的景象，既是一个比较容易实现的目标，而且其结果距离绝对的真实，也可以被认为是在误差范围以内。&lt;/p&gt;

&lt;p&gt;相机为了捕捉并存储更多的信息，会对自己的 RAW 图片格式进行特殊设计，摄影师在拍摄时也会尽量让画面中最暗和最亮的部分不至于超过相机所能记录的数据范围，这都导致相机的原始数据的目标本就是以存储更多信息，而不是让这些信息不加处理就能被人正确理解。从这个角度上来说，越是原片直出，才几乎可以肯定与你亲临现场看到的景象相去甚远。越是要追求真实，才越应该对图片进行处理。&lt;/p&gt;

&lt;p&gt;更进一步，就连询问对方是不是原片直出这一事实也没有什么意义。按照原片直出的第一种定义，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.jpg&lt;/code&gt; 格式的照片包含的信息量就比 RAW 图像少很多，在明明有能力获得更多信息的情况下选择主动丢弃这些信息，对于一个创作者来说实在是很不明智，一般只在多款机型的横向测评中作为对照参考；按照第二种定义，使用 RAW 格式中更丰富的信息生成 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.jpg&lt;/code&gt; 格式的图片，这个过程需要图像处理软件的参与，而不同软件的算法不同，导出结果是不一样的。比如下图，分别给出了 RawTherapy 不加任何操作导出、DarkTable 手动移除软件自动调整然后导出、DarkTable 使用软件自动调整导出3种不同的结果，差别非常明显。在这种情况下，哪一种算是原片直出呢，原片直出又如何呢？&lt;/p&gt;

&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;img src=&quot;/blog/assets/photos/2020-03-14_compare-softwares.jpg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;那还有人问了，对于那些一眼就看出来是调过颜色的，而且颜色一看就是现实生活中看不到的搭配，那我是不是就可以开始喷了呢？当然也不是，如果大家都能看出图片的颜色不同于日常真实，说明这张图片就不是照片，而是作者基于照片的艺术创作。认为这样的图片应该反映真实，就好比把小说情节当作史料来引用一样，这不是小说作家的错误，理解一件作品是作者和观众两方面的责任。&lt;/p&gt;

&lt;p&gt;如果以上这些依然不能说服对方，或者别人摆明了就是来砸场子的，那咱也不客气——&lt;/p&gt;

&lt;p&gt;“您那巴掌大的屏幕做过色彩管理吗？能把颜色都显示准了吗？我这儿原片直出有用吗？颜色准不准您能看得出来吗？”&lt;/p&gt;

&lt;h2 id=&quot;adobe-lightroomrawtherapy-和-darktable&quot;&gt;Adobe LightRoom、RawTherapy 和 DarkTable&lt;/h2&gt;

&lt;p&gt;我的手机上一直常备有 Adobe LightRoom 的移动版，免费版的功能够用，可以直接用软件控制相机的光圈快门等参数，拍摄 RAW 图像（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.dng&lt;/code&gt; 格式）。&lt;/p&gt;

&lt;p&gt;但是 Adobe 家的 PC 软件是要收费的，而且现在不是一锤子买卖，而是按月交保护费，让人感觉随时在接受剥削。前年圣诞节的时候有优惠，一口气交了一年的钱。但是过了一段时间之后，我忘了究竟交了多少钱，也就不知道是不是还在每月扣款，而且受到了开源自由软件精神的 &lt;del&gt;(洗脑)&lt;/del&gt; 感召，于是毅然退订了 Adobe 的服务 &lt;del&gt;(然后发现钱已经交过了，退订意味着少了接近半年的服务，外加损失一个月的月费)&lt;/del&gt;。没了张屠夫，咱也不能吃带毛的猪啊，于是一番搜索，找到了 RawTherapy 和 DarkTable 两个替代产品。&lt;/p&gt;

&lt;p&gt;在&lt;a href=&quot;https://linux.cn/article-10912-1.html&quot;&gt;这篇文章&lt;/a&gt;的忽悠之下，我决定使用 RawTherapy，因为据文章说 DarkTable 对 Windows 版本的维护不如 Linux 上心。但是用了 RawTherapy 之后总觉得哪里不对，每次导入图片的时候都感觉“咦，怎么当时很漂亮的照片在电脑里看这么丑”，我又不是没见过 RAW 图片，这种反差实在是超出预期，而且使得修图的工作量大了很多。去年夏天，有个学妹来我们实验室访学，临走的时候我带她去动物园和博物馆逛了一天，回来之后看着成吨的废片，欲哭无泪……&lt;/p&gt;

&lt;p&gt;今年冬天的第二场雪，我和新认识的老乡一起去城东边远郊的一个小村子拍雪景。回来之后不久，老乡就在微信公众号发了一篇游记，我则看了一眼图片文件夹就再也不想修图了，以至于拖延到现在。抱着死马当活马医的想法，下载了 DarkTable，然后发现几乎不怎么用调整就可以得到还算令人满意的效果（见上面的对比图）。对于 LightRoom，我最念念不忘的就是它 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Color Mix&lt;/code&gt; 的功能，在 DarkTable 中，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Color Zone&lt;/code&gt; 和 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Color Look Up Table&lt;/code&gt; 两个功能基本上可以取代。情况没有什么变化的话，我应该会在将来一直使用 DarkTable 了。&lt;/p&gt;

&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;img src=&quot;/blog/assets/photos/2020-03-14_lightroom-darktable.jpg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;事实证明网上的测评文章几乎没什么用，哪怕作者没有被开发者收买，也不一定有能正确描述不同软件异同的洞察力和表达力，而且结论还往往基于一些没有明言的个人经验和价值观。所以也请不要把这篇文章看作是 RawTherapy 和 DarkTable 的严肃测评，只是我对自己使用经历和感受的一段叙述。如果你也觉得其中一款用起来很不顺手，可以考虑换一个试用一段时间。&lt;/p&gt;

&lt;h2 id=&quot;说回这次的照片&quot;&gt;说回这次的照片&lt;/h2&gt;

&lt;p&gt;上个学期隔壁实验室有一个学弟在做 rotation，正好当时他们老板和我们老板 &lt;del&gt;（情投意合）&lt;/del&gt; 志同道合，于是就有一个合作的小项目。互相加了一下微信之后，翻了翻他的朋友圈，发现居然是老乡，还是同一高中的校友，而且也有一个个人向的微信公众号，于是相约有时间一起出去拍照片。&lt;del&gt;（啊，社会工程学是多么地可怕）&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;今年冬天气候有点怪，开始降温的过程非常平滑缓慢，而且气温一直不低。然后一次突如其来的降温带来一次突如其来的大雪，等到反应过来的时候已经化的差不多了。冬天里的雪就像经济危机里的股灾一样，有了第一次暴跌就有第二次 :-)，于是第二次的时候，我们抓住机会来了一次逃学威龙，来到城西的一个小县城里看雪。&lt;/p&gt;

&lt;p&gt;然后，这就是这次我最满意的一张照片了。&lt;/p&gt;

&lt;p&gt;处理的方法也很简单，DarkTable 的直方图可以直接拖动，而且最暗的四分之一和较亮的部分可以分开处理，所以就直接把直方图的右半边往右拉，左边往左拉，使得一部分的像素过曝，同时一部分的暗部完全压暗成黑色。这样做是因为看到图片中最白的像素一定来自雪，而黑色来自树皮上的皴裂，将两者的色彩对比拉开之后，图片自然就会显得通透，也符合尽可以贴近自己眼前所见的原则。另外色彩的饱和度稍微提高一些，为了避免过于鲜艳，把对比度稍微降低一些，但是这些操作对于整体效果的影响不大。&lt;/p&gt;

&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;img src=&quot;/blog/assets/photos/2020-03-14_comparison.png&quot; /&gt;&lt;/figure&gt;

</description>
        <pubDate>Sat, 14 Mar 2020 00:00:00 +0000</pubDate>
        <link>mountaye.github.io/blog/articles/raw-image-or-not</link>
        <guid isPermaLink="true">mountaye.github.io/blog/articles/raw-image-or-not</guid>
        
        
        <category>post</category>
        
      </item>
    
      <item>
        <title>.pdf | 读方孝孺《豫让论》</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;请注意：&lt;/strong&gt; 本文包含关于令人不适的描写以及明史，阅读请慎重。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;我年轻时就读过《古文观止》，那是清人吴楚材和吴调侯编选的一套文言散文集，上启《左传》，下至晚明，大陆初高中语文课本里的文言文，绝大多数都入选了这一集子。&lt;/p&gt;

&lt;p&gt;既然是“年轻时就读过”，那就约等于没读过，只是偶尔翻一翻，混个眼熟。某天灵光一闪，想看看那些生前素有文名，而因名获罪的文人是否还有文章流传，流传下来的文章又是否名副其实，于是想到了方孝孺。还真有，是《豫让论》（其实一共两篇文章，另一篇是《深虑论》，当时没有注意到）。&lt;/p&gt;

&lt;p&gt;这是一篇比较典型的文人论史的文章，其中叙事只是夹叙夹议的副产物，大概默认读者已经了解了相关史实，只能算是原有史料的读书笔记，或者时髦一点说，是衍生作品。所以当时不了解豫让的我，实际上没太看懂。后来在大三下学期，选修了一门《资治通鉴》导读课，豫让的故事算是韩赵魏三家分晋的一个尾声和回荡，而三家分晋发生在周威烈王二十三年之前不久，是&lt;a href=&quot;https://zh.m.wikisource.org/wiki/%E8%B3%87%E6%B2%BB%E9%80%9A%E9%91%91/%E5%8D%B7001&quot;&gt;《资治通鉴》&lt;/a&gt;记录的开端。&lt;/p&gt;

&lt;hr class=&quot;slender&quot; /&gt;

&lt;p&gt;话说晋国到了春秋末年，国君的能力和实力都已大不如前，国家的权力掌握在各家大夫手里，实力最强者为智氏，远胜过韩赵魏三家。智氏的倒数第二任大夫智宣子选择继承人的时候，选择了各方面才能优秀，但是“不仁”的智瑶。智瑶在智宣子死后掌权成为智伯，在一次宴会上公然羞辱了韩康子和他的谋臣段規。另一方面，赵简子选择了能把写有自己教导的木简时时记诵，并且带在身上的無恤作为继承人，还命尹鐸在晋阳经营，收买民心，以为退路。無恤即位后，史称赵襄子。&lt;/p&gt;

&lt;p&gt;智伯仗势自己的实力不断向韩魏两家索取土地，两家畏于智氏的实力，每每割地示好，却希望别人出头教训一下智氏。赵襄子没有满足智氏的贪婪，于是智伯率领韩魏两家一起攻打赵襄子。襄子逃往晋阳坚守，智氏掘开晋阳旁边的晋水，水淹城墙，还向身旁的魏桓子和韓康子炫耀自己水淹的谋略。这一句话就提醒了两人，因为魏的安邑旁边有汾水，韩的平阳旁边有絳水。于是就在晋阳即将沦陷之际，赵魏韩三家结盟，反过来水淹智氏，夷灭了智氏一族。《通鉴》里还记了一句话，小孩子要把眼睛捂上：“趙襄子漆智伯之頭，以為飲器。”&lt;/p&gt;

&lt;p&gt;豫让此时在《资治通鉴》中登场，司马光着墨不多，更详尽的故事在&lt;a href=&quot;https://zh.wikisource.org/wiki/%E6%88%B0%E5%9C%8B%E7%AD%96/%E5%8D%B718#%E6%99%89%E7%95%A2%E9%99%BD%E4%B9%8B%E5%AD%AB%E8%B1%AB%E8%AE%93[1]&quot;&gt;《战国策·卷十八·晉畢陽之孫豫讓》&lt;/a&gt;，我们那门课中有引用。他本是晋国大夫中行氏的家臣，中行氏给他的待遇不好，于是跳槽到了智伯家，深受智伯宠信。智伯败亡之后，豫让逃入深山，说出了那句著名的“士為知己者死，女為悅己者容”，发誓要报仇。他先是身藏匕首化装躲在赵襄子家的厕所，襄子如厕时心惊肉跳，于是派人搜索，抓出了豫让。赵襄子感叹豫让的义气，将其释放。但是豫让没有死心，他在身上涂漆易容，还吞下炭块把嗓子弄哑，连自己的妻子都认不出来，化装成乞丐寻找接近赵襄子的机会。终于有一次赵襄子出行要经过一座桥，豫让埋伏在了桥下。可惜赵襄子的马“提前受惊”，豫让再次被捕。豫让不想再成全赵襄子宽宏大量的美名，主动要求伏诛。襄子感怀其忠义，脱下自己的外袍，命人举着袍子，豫让再三跃起，以匕首刺袍，然后伏剑而死。&lt;/p&gt;

&lt;p&gt;虽然豫让漆身吞炭之后连妻子都认不出来，但是还是有朋友认出来了，朋友不解，若是智伯投降赵氏，得到了赵襄子的器重与信任，到时行刺岂不更容易成功，又哪用得着受这些苦呢？豫让则认为不行，那样做是“懷二心以事君”，如果赵襄子真的信任了自己，那么复仇就变成了为了旧的知己而杀害新的知己，而且违背了君臣之义。他自己做这么困难的事，就是想让那些怀有二心的臣子感到羞愧。&lt;/p&gt;

&lt;hr class=&quot;slender&quot; /&gt;

&lt;p&gt;以上就是《豫让论》评论的对象。那么他是怎么评论的呢？文章开门见山，立场先行：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;士君子立身事主，既名知己，则当竭尽智谋，忠告善道，销患于未形，保治于未然，俾身全而主安。生为名臣，死为上鬼，垂光百世，照耀简策，斯为美也。苟遇知己，不能扶危于未乱之先，而乃捐躯殒命于既败之后；钓名沽誉，眩世炫俗，由君子观之，皆所不取也。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;也就是说面对堪称知己的主君，臣子应该做的是全力发挥自己的智谋，将祸患消弭于无形，让自己和主公都能保全，将生前身后的荣耀留在史书上，那才叫爽。没能在祸乱发生之前平息掉，却在失败已成定局之后才捐躯殒命，豫让的做法是沽名钓誉，吸引世俗的眼球，为君子所不取。后文结合着我们前面讲到的故事，分条缕析地论证了一番。当然结尾还是给豫让留了一点面子——虽然豫让称不上是一名国士，但是比起早上起来还是仇敌，下午就变成别人臣子的人来说，还是不知道高到哪里去了。&lt;/p&gt;

&lt;p&gt;读完文章，一声长叹。&lt;/p&gt;

&lt;p&gt;朱元璋的嫡长子朱标早亡，于是立朱允炆为皇太孙，分封朱标的几个兄弟为王，有互相牵制，拱卫京师之意。然而就在朱元璋的晚年，除了燕王朱棣之外的几个年长藩王先后去世，再也无人能制衡燕王。朱允炆登基之后，任用齐泰和黄子澄，未有深谋，激进削藩，不久，燕王朱棣举兵“靖难”。&lt;/p&gt;

&lt;p&gt;方孝孺也并非无所作为。据《明史纪事本末》记载，削藩之时，他曾建议“以德化道之”，实际上就是委婉地提出了反对意见。燕王进兵至大名府时，他曾建议一方面派遣使者传信稳住朱棣，另一方面派遣关外将领入关进攻燕王后方。自己在北方的门生口中得知朱棣和他的世子朱高炽不睦，又修书劝降朱高炽，离间朱棣父子。直到朱棣兵临南京城下，他仍坚持固守待援。&lt;/p&gt;

&lt;p&gt;可惜这些努力没有回报。年轻的建文帝意气风发，哪里听得进徐图缓进的建议？朱棣发现后方有难，居然修书和建文帝叙说起人情信义，而建文帝居然因之几欲罢兵，朱棣趁此机会偷袭南方粮道，大挫南军士气。朱高炽对离间计的处理也滴水不漏，将书信和信使原封不动押送前线。至于南京城破之时，守城的功臣二代李景隆开门而降，诸位藩王则早已开始和燕王互道辛苦……&lt;/p&gt;

&lt;p&gt;故事的结局让人不忍卒读，小孩子更是必须回避。因为打算发在微信等平台，审核人员辛苦，还是直接上原文吧：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;及师次金川门，大内火，建文帝逊去，即召用孝孺，不肯屈，逼之，孝孺衰经号恸阙下，为镇抚伍云等执以献。成祖待以不死，不屈，系之狱，使其徒廖镛、廖铭说之。叱曰：「小子从予几年所矣，犹不知义之是非！」成祖欲草即位诏，皆举孝孺，乃召出狱，斩衰入见，悲恸彻殿陛。文皇谕曰：「我法周公辅成王耳！」孝孺曰：「成王安在？」文皇曰：「伊自焚死。」孝孺曰：「何不立成王之子？」文皇曰：「国赖长君。」孝孺曰：「何不立成王之弟？」文皇降榻劳曰：「此朕家事耳！先生毋过劳苦。」左右援笔札，又曰：「诏天下，非先生不可。」孝孺大批数字，掷笔于地，且哭且骂曰：「死即死耳，诏不可草。」文皇大声曰：「汝安能遽死。即死，独不顾九族乎？」孝孺曰：「便十族奈我何！」声愈厉。文皇大怒，令以刀抉其口两旁至两耳，复锢之狱，大收其朋友门生。每收一人，辄示孝孺，孝孺不一顾，乃尽杀之，然后出孝孺，磔之聚宝门外。孝孺慷慨就戮，为绝命词曰：「天降乱离兮孰知其由，奸臣得计兮谋国用犹。忠臣发愤兮血泪交流，以此殉君兮抑又何求。呜呼哀哉，庶不我尤！」时年四十六。复诏收其妻郑氏，妻与诸子皆先经死。悉燔削方氏墓。初，籍十族，每逮至，辄以示孝孺，孝孺执不从，乃及母族林彦清等、妻族郑原吉等。九族既戮，亦皆不从，乃及朋友门生廖镛、林嘉猷等为一族，并坐，然后诏磔于市，坐死者八百七十三人，谪戍绝徼死者不可胜计。孝孺季弟方孝友就戮时，孝孺目之，泪下。孝友口占一诗曰：「阿兄何必泪澘澘，取义成仁在此间。华表柱头千载后，旅魂依旧到家山。」士论壮之，以为不愧孝孺之弟。孝孺又有二女，年俱未笄，被逮过淮，相与连袂桥水死。&lt;/p&gt;

  &lt;p&gt;——《明史纪事本末·卷十八·壬午殉难》&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr class=&quot;slender&quot; /&gt;

&lt;p&gt;议论方孝孺议论豫让的文章是一件很困难的事情，倒不是因为国人讨论问题经常&lt;a href=&quot;https://mountaye.github.io/blog/articles/TL-Paul-Graham-How-to-Disagree&quot;&gt;“诉诸身份”&lt;/a&gt;，而是这种套娃式的议论实在是容易流于“哀之而不鉴之”的浅薄，&lt;del&gt;以及有给自己立 flag 的危险&lt;/del&gt;。&lt;/p&gt;

&lt;p&gt;不过很有意思的一点是，《豫让论》中多次出现的关键词是“忠”，比如“让之死固忠矣，惜乎处死之道，有未忠者存焉！”，而在《资治通鉴》和《战国策》中，“忠”字只出现了一次，赵襄子所赞美的，是豫让的“义”。在豫让的年代，主公与谋臣的关系，更接近一种分工合作的关系。主公向谋臣支付自己的信任，承担失败身死的风险，享受采邑臣民的利权；谋臣支付自己的智谋，了却君王天下事，赢得生前身后名。豫让的所作所为，是在践行自己的个人意志，而非履行被动的义务。&lt;/p&gt;

&lt;p&gt;只是这种分工之“义”，在一代又一代“博学鸿儒”的改造之下，逐渐成了臣子单方面的“忠”。在豫让之时，劝谏一个刚愎自用的君主尚且困难无比，在一个以忠为纲的帝国，皇帝就成了国家机器上最大的单点故障隐患，民怨积累而沸腾，便有了一次又一次的王朝循环。&lt;/p&gt;

&lt;p&gt;跳出历史的弹道来看，我们可以很清楚的看到，道德除了具有人们普遍承认的模糊性之外，在百年以至于千年的时间尺度上，还是一个时变函数。赵襄子尚且将座车收入府库，三日不食，纪念豫让；到了方孝孺的时代，豫让就变成了“钓名沽誉，眩世炫俗”，正确的做法是再三劝谏，“三谏不从，移其伏剑之死，死于是日”；再后来，“明月有情还顾我，清风无意不留人”……帝王将相在权力斗争的战场上，开发自己的政策工具箱的时候，想到过自己的小小发明可能会塑造百十代人的道德观念吗？不能不慎之又慎啊。&lt;/p&gt;

&lt;p&gt;不过应该是我多虑了，像我这样的蝼蚁，时代的车轮碾过之时，外骨骼碎裂的声音和引擎的轰鸣相比，不值一提。&lt;/p&gt;
</description>
        <pubDate>Mon, 13 Jan 2020 00:00:00 +0000</pubDate>
        <link>mountaye.github.io/blog/articles/read-on-Yurang-by-Fang-Xiaoru</link>
        <guid isPermaLink="true">mountaye.github.io/blog/articles/read-on-Yurang-by-Fang-Xiaoru</guid>
        
        
        <category>post</category>
        
      </item>
    
      <item>
        <title>.tex | 实验室中酵母菌的衣食住行</title>
        <description>&lt;p&gt;“酵母”其实是1500多种微生物的一个统称，但是在科学研究中最常用的一种是 &lt;em&gt;Saccharomyces cerevisiae&lt;/em&gt;，下文中的酵母一词指的就是它们。作为一种单细胞生物，酵母在指数生长期，通过出芽生殖的方式，平均约90分钟就可以繁殖一代。同时作为真核生物，核膜以及各种具膜细胞器应有尽有。而且酵母对脂质的代谢路径和人类的代谢路径在进化上是同源的，也就是说有些治疗人类疾病的药物，也可以在酵母细胞中产生效果。结合酵母菌快速繁殖的特性，可以方便相关药物的筛选。再加上人们熟知的发酵、酿酒等应用，酵母就成了生物实验室中非常常见的一种模式生物。&lt;/p&gt;

&lt;h2 id=&quot;衣&quot;&gt;“衣”&lt;/h2&gt;

&lt;p&gt;&lt;del&gt;全裸，下一题。&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;这个问题其实还是可以再多说两句的。&lt;/p&gt;

&lt;p&gt;这里的“衣”显然是一种比喻，既然是比喻，那就要看说话的人想强调的是衣服的哪种性质。酵母的细胞膜外面还有一层细胞壁，对于一个细胞的定义来说，细胞壁并不是必需的。从这个角度讲，完全可以把细胞壁比作酵母的外套。这层外套的主要成分是糖类，既包括起到结构支撑作用的多糖，也包括传递信息，可以用来对酵母进行特异性识别的糖蛋白。&lt;/p&gt;

&lt;p&gt;即便有了这么一层外套，单个的酵母细胞在显微镜下依然是透明的，在普通的亮场 (bright field) 显微镜下，可以隐约看到酵母细胞内部比较巨大且明显的结构，比如液泡。要想看得更清楚，就得用上 DIC（微分干涉相差，differential interference contrast）显微技术了。要说清楚 DIC，需要一篇独立的文章，而文章的很大一部分都会是数学。简而言之，光在不同的介质中的传播速度不同，表征介质的这一性质的物理量叫做“折射率”，折射率 × 光传播的距离 = 光程。当我们让两束相同的光线，通过给定的距离，其中一束光线通过我们的酵母细胞，另一束经过一段折射率已知的均匀介质（比如说空气），两束光通过的光程不同，再次见面时就会有差别，用衍射的方法比较一下两束光，就能得出酵母细胞内不同位置的折射率信息，从而看出不同的结构。&lt;/p&gt;

&lt;p&gt;DIC 设备比普通的亮场显微镜要贵不少，而且有些不同的细胞器其实长得很像，即便用上 DIC 也不容易分清楚，这时候我们就要对酵母细胞本身动点手脚。有些荧光染色剂可以和某种细胞器特异性地结合，用特定波长的光照射细胞，被染色的细胞器就会发出另外一种波长的荧光，我们用滤光片把入射光过滤掉，就可以得到这种细胞器在细胞中的位置、形状和大小信息。除了用染色剂，还可以把荧光蛋白基因插入到某些细胞器蛋白质的基因旁边，这样就免去了每次观察细胞时染色的麻烦。&lt;del&gt;（“所以你们实验室做转基因喽？那你告诉我，转基因食品能不能吃？”）&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;之前两段说的是单个细胞，而在固态的培养基（“住”的部分会介绍）上面，酵母细胞不能大范围移动，单个酵母细胞作为祖先不断繁殖，“子又有孙，孙又有子”，久而久之（其实也就两三天）就可以形成一个菌落，就是培养基上一个肉眼可见的斑点。不论是黄色的 YPD 培养基还是白色的 SD 培养基，菌落的颜色肉眼观察不出区别，都是乳白色。&lt;/p&gt;

&lt;h2 id=&quot;食&quot;&gt;“食”&lt;/h2&gt;

&lt;p&gt;酵母是一种异养生物，也就是说需要摄入营养物质，既要利用其中的化学能维持自己的生命活动，也要利用这些物质的原子和分子构建自己身体的组成成分。能够满足微生物细胞生长繁殖需求的营养物质，叫做培养基 (medium)。我们实验室中常用的培养基主要就两种，一是 YPD 培养基，二是 SD 选择培养基。&lt;/p&gt;

&lt;h3 id=&quot;ypd&quot;&gt;YPD&lt;/h3&gt;

&lt;p&gt;这个名字直接来源于其成分——Yeast extract, Peptone, Dextrose——酵母提取物、胨、葡萄糖。用酵母提取物去喂酵母……不能多想，想多了就有点怪怪的……好处是真的好用，生长速度比下面要讲的 SD 培养基要快一些。而且由于我们实验室都是 SD 选择培养基，所以野生型酵母只能用 YPD。&lt;/p&gt;

&lt;p&gt;那么缺点呢？一个问题就是酵母提取物里面，究竟有什么物质，每种物质占比多少，都是一笔糊涂账，实验结果就不好分析。&lt;/p&gt;

&lt;p&gt;另外，YPD 培养基在很多波长的光照射下都会发出微弱的荧光，在之前说过的荧光显微观察中，这种荧光就会成为背景噪声。所以 YPD 培养的细胞不能直接进行荧光显微观察，要换到 SD 培养基养一段时间（一般半个小时以上），或者干脆就直接养在 SD 培养基里。&lt;/p&gt;

&lt;h3 id=&quot;sd-选择培养基&quot;&gt;SD 选择培养基&lt;/h3&gt;

&lt;p&gt;SD 的全称是 synthesis defined，意思是人工合成，而且成分是明确且固定的，配方在一般的科研网站上都能找到。而选择培养基的意思是，相比于普通的 SD 培养基，某种营养物质（一般是某种氨基酸）被去掉了，比如说 SD-His 培养基中就不含有组氨酸 (Histidine)。这些营养物质都是野生酵母没办法自己合成的，但是在用同源重组的方法进行基因编辑的时候，我们除了会导入目标基因之外，还会一起导入能表达合成这一营养物质的酶的基因。把被编辑过的细胞接种在选择培养基上，那些没能成功编辑的细胞将无法合成相关营养物质，只有编辑成功的细胞能够幸存，并形成菌落，这就是“选择”一词的由来。&lt;/p&gt;

&lt;h2 id=&quot;住&quot;&gt;“住”&lt;/h2&gt;

&lt;p&gt;由于酵母既没有嘴，也不像草履虫一样拥有可以游动的鞭毛，所以只能和营养物质生活在一起。（当然也是和代谢废物生活在一起，不能多想……）所以说，培养基不仅是食物，还很类似于酵母菌的“家具”。&lt;/p&gt;

&lt;p&gt;前面说到了培养基，定义里说是营养物质，但是并没有强调其物质状态。培养基既可以按照配方配置成溶液，这叫做液态培养基。在溶液中按比例（一般是 2% 的质量分数）加入琼脂 (agar)，先加热溶解，然后稍微冷却之后倒入培养皿 (petri dish)，继续冷却就形成了凝胶，这样就制成了一个半固态培养基。&lt;/p&gt;

&lt;p&gt;在培养基中加入了细胞之后，此时的混合物应该叫做培养液 (culture)，如果把 medium 和 culture 弄混了的话，有些人的脸上会浮现出微妙的笑容。屠格涅夫说过：“有教养不是吃饭的时候不洒汤，而是别人洒汤的时候你不去看他。”为了避免别人没有教养，我们还是应该勉为其难地区分一下这两个概念。:-)&lt;/p&gt;

&lt;p&gt;说完家具来说房子，也就是 culture 的容器。&lt;/p&gt;

&lt;p&gt;在液态培养液中，酵母的密度要略微大于培养基的密度，所以长时间的静置会使得细胞在容器的底部沉积，影响生长速度。所以我们需要把容器固定在恒温的机械平台上不断摇晃，为了让离心力尽可能地大，容器要选用底面积比较大的锥形瓶，用普通试管的话需要将其斜放。&lt;del&gt;（我看看有哪个高中生蹦出来说不存在离心力这回事，哼）&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;对于琼脂培养基，培养皿直接放在恒温箱里静置。前面说过，单个细胞会繁殖，然后无法移动，形成一个菌落。没有基因突变的话，这一个菌落中细胞的基因型都是相同的。如果两个空间上相邻的菌落不断长大，就会连在一起，进而长成一个大菌落（突然想到了光学课本里瑞利判据那张连环画），此时就不好确定基因型的纯洁了。在长到这种情况之前，就要把培养皿用 3M 胶带封起来，然后放到低温下暂存，等待日后实验时取出单个菌落继续培养，或是冷冻长期保存。&lt;/p&gt;

&lt;p&gt;说到了温度，酵母菌的正常生长需要 30 摄氏度。刚才说到要保存菌落已经足够大的培养皿，这时的温度一般是 4 摄氏度，也就是冰箱冷藏室的温度。而长期保存细胞的话需要放入 -70 ~ -80 摄氏度的低温冷柜中。&lt;/p&gt;

&lt;h2 id=&quot;行&quot;&gt;“行”&lt;/h2&gt;

&lt;p&gt;我们实验室还并没有厉害到需要给其他实验室寄送我们培养的菌株的地步，我们实验室里的菌株是怎么来的我也忘了……所以这一节所说的“行”，指的是酵母菌在不同的培养基之间的转移。&lt;/p&gt;

&lt;p&gt;网上的教程里比较讲究，啥高科技工具都有，就跟吃螃蟹的蟹八件似的。我们实验室比较莽，不论是冷冻的细胞，还是液态或者琼脂培养基中的细胞，一律都是用消毒杀菌过的细木棍来取细胞，如果不是要转移到琼脂培养皿的话，甚至还可以用一次性移液枪头。琼脂培养基的话要仔细蘸一蘸，确保取到的细胞来自同一个菌落，冷冻细胞的话就刮一刮容器里的冰沙，液态培养基的话就随便蘸一蘸。&lt;/p&gt;

&lt;p&gt;如果目的地是液态培养基的话就很简单，木棍伸进去，搅合搅合，完事儿。&lt;/p&gt;

&lt;p&gt;如果是琼脂培养基的话，要轻轻地在琼脂表面来回涂擦，要小心不能刮坏琼脂层。来回涂擦几次之后，把木棍换到之前没接触细胞的一面，在刚才涂擦的区域边缘，往没涂过的地方来回涂擦几次，如是反复者二三。这样做是因为刚开始的细胞数量可能比较多，长出来的菌落从一开始就连成一片，后来几次涂擦时细胞的密度就会越来越低，某个区域就会出现足够数量又相距足够距离的一群菌落。总之是个技术活还是个经验活。&lt;/p&gt;

&lt;p&gt;如果是新制备长期保存的细胞的话，需要先在液态培养基中将细胞养到合适的浓度，然后在专用的容器中按照 1:1 的比例混合培养液和甘油，然后就可以放进冷柜了。&lt;/p&gt;
</description>
        <pubDate>Sun, 29 Dec 2019 00:00:00 +0000</pubDate>
        <link>mountaye.github.io/blog/articles/yeast-cloth-food-house-travel</link>
        <guid isPermaLink="true">mountaye.github.io/blog/articles/yeast-cloth-food-house-travel</guid>
        
        
        <category>post</category>
        
      </item>
    
      <item>
        <title>.png | 清秋须兼细雨</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;流量预警，本文包含多幅图片。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;去年秋假啥也没干，本以为是个不短的假期，结果睡了个昏天黑地。开学之后大家都在谈论去了哪些地方，自己哪也没去，不免心中不爽。于是在之后的周六早上，放着一堆作业不做，开车去了城西的心碎湖。之所以知道这个地方，是因为之前卖给我车的老哥有时会在朋友圈里贴在湖边遛狗的照片。这个湖位于市郊的一个卫星城附近，平时散步锻炼的人不少；湖边虽有小山，但是林木茂密，适合俯瞰的位置几乎没有，总之不太适合拍照。不过心里憋着一股气，还是毅然发动了车子。&lt;/p&gt;

&lt;p&gt;但是一上高速我就后悔了，天空开始下雨。不过还是硬着头皮开到了湖边。凡故事必有转折，转折就是湖边起了雾。能见度低下来，湖对面不便入镜的树木和建筑都隐没不见，本不宽阔的小湖反而有了一点气势。湖西面的国道外是一个林木育苗场，一排比较年轻的杨树已经长得很高，在雾中时隐时现，像是热气腾腾的清汤中的娃娃菜。那场雨下得也是不早不晚，正是湖边不同物种的树木颜色丰富的时节。可惜当时人比较菜，一心只会埋怨设备，总觉得杨树需要长焦镜头过滤杂物，湖边的各色树木更适合无人机俯拍，自己啥都没有，索性就不拍了。又可惜这里的秋天短，很快树叶落尽，初雪骤至，再没遇到同样的天气。&lt;/p&gt;

&lt;p&gt;今年虽然人还是一样的穷而且菜，但好歹学会了跟自己的设备妥协。一入秋，我就一直等着下雨的“好天气”。终于在两周前的周六，让我给等到了。不过可惜的是，湖边没再起雾，所以天气反而成了一个挑战，一直没有找到好的方法表现降雨，而天空的缺乏细节也给构图造成了困难。&lt;/p&gt;

&lt;p&gt;奇妙的是，仗着自己路熟没用导航，错过了平时的高速出口，结果反而在湖边找到了一条此前没有发现的小路，由于此路不通，可以长时间停车。这真的很值得庆幸，因为俺们村的道路建设者，审美真的成问题，很多风光优美的路段完全没办法停车，纵有惊艳景色，也只能遗憾而去。&lt;/p&gt;

&lt;p&gt;刚下车，由于天气潮湿，全程挂着 35 mm 定焦头没有切换。因为是手持拍摄，又不喜欢全手动，所以采用快门优先模式，保证安全快门。把白平衡设为固定的阴天模式，方便后期统一调整。先拍一张试试水。&lt;/p&gt;

&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;img src=&quot;/blog/assets/photos/2019-11-14-road.jpg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;走到土垄上面，才发现背后是条小河：&lt;/p&gt;

&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;img src=&quot;/blog/assets/photos/2019-11-14-river.jpg&quot; /&gt;&lt;/figure&gt;

&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;img src=&quot;/blog/assets/photos/2019-11-14-river2.jpg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;土垄实际上起到了堤坝的作用，保护着背面的农田：&lt;/p&gt;

&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;img src=&quot;/blog/assets/photos/2019-11-14-field.jpg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;右下角的暗红色区域是一种藤状植物的躯干，显得有些杂乱，所以在后期的时候裁剪掉了，画面干净了很多：&lt;/p&gt;

&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;img src=&quot;/blog/assets/photos/2019-11-14-pana.jpg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;此时刚刚收获，还有农用机械停留在田边：&lt;/p&gt;

&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;img src=&quot;/blog/assets/photos/2019-11-14-tracter.jpg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;小路的尽头是一条废弃的铁路，无人值守。鉴于不用大光圈怼几张会被人说成不会拍照，那就来吧：&lt;/p&gt;

&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;img src=&quot;/blog/assets/photos/2019-11-14-rail-vertical.jpg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;后期检查照片的时候发现自己的确不会拍照，比如下面这张，对焦到铁轨后的野草上显然更好……&lt;/p&gt;

&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;img src=&quot;/blog/assets/photos/2019-11-14-rail-horizontal.jpg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;铁路背后，折枝法构图，算是少数试图表现天气的照片了：&lt;/p&gt;

&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;img src=&quot;/blog/assets/photos/2019-11-14-leaves.jpg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;铁路背后是一个水漫桥，桥下游的石堆拦住了一片落叶。这张照片并不令人满意，但是拍到了下落的雨丝，算是切题：&lt;/p&gt;

&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;img src=&quot;/blog/assets/photos/2019-11-14-rainfall.jpg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;地面上的黄叶：&lt;/p&gt;

&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;img src=&quot;/blog/assets/photos/2019-11-14-ground.jpg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;离开此处后，前往已经熟悉的湖边停车场。由于没有雾，湖边的缺点之前已经说过了，所以没有拍到满意的照片。随后来到湖边的小山上，把相机举高，在浓密的树木间俯拍小湖：&lt;/p&gt;

&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;img src=&quot;/blog/assets/photos/2019-11-14-lake.jpg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;山坡的另一面是一片草场，对焦的时候只注意到了雨滴，没注意到小红果的失焦：&lt;/p&gt;

&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;img src=&quot;/blog/assets/photos/2019-11-14-bush.jpg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;前面几张风光糖水的光圈值都设为3，因为实在信不过最大光圈的画质。镜头也没有辜负这份不信任，后面在湖边小山上，很多照片出现了大片明显的紫边，只能弃用。&lt;/p&gt;

&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;img src=&quot;/blog/assets/photos/2019-11-14-car.jpg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;文章的结尾似乎应该文艺一下，让我想到了这张照片。魏晋时的政局令人窒息，名士阮籍既不愿与司马氏合作，稍微表达异见就有被剪除的危险，于是常驾车出游，行至道路的尽头，长号而哭。今日之人不必再学阮籍，甚至不必再学王勃嘲笑阮籍，应该感谢科学技术。不仅是因为科技提供了相机这样的玩具，更有赖于科技开辟出的无数条新的赛道，使得人不必拥挤于权力场上，人生价值不必通过你死我活的斗争来实现。&lt;/p&gt;

&lt;p&gt;不过，我也长号而哭了一把，不过是在回家之后——我相机包落在山顶的凉亭上了……&lt;/p&gt;

</description>
        <pubDate>Thu, 14 Nov 2019 00:00:00 +0000</pubDate>
        <link>mountaye.github.io/blog/articles/rainy-autumn-album</link>
        <guid isPermaLink="true">mountaye.github.io/blog/articles/rainy-autumn-album</guid>
        
        
        <category>post</category>
        
      </item>
    
      <item>
        <title>.sh | 在 VirutalBox 中安装 Arch Linux</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;这是一篇速记，相当于实验的原始记录。日后有可能根据这些记录，整理出一些心得体会，或者全流程的教程。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;第四代树莓派（&lt;a href=&quot;https://www.raspberrypi.org/products/raspberry-pi-4-model-b/&quot;&gt;Raspberry Pi 4&lt;/a&gt;）刚刚推出的时候，脑子一热买了一台。作为一台计算机，只用原装的操作系统有点咸鱼了，所以打算安装 Linux 的一款发行版。既然要追求刺激，那就贯彻到底咯，于是就决定挑战一下 Arch Linux。 &lt;del&gt;（反正早晚也要吃灰）&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;既然要挑战一个很有挑战性的操作系统，那么先在虚拟机里试试水就很有必要了。（后来才发现用这个虚拟机往树莓派里写操作系统，也是官方比较推荐的一种安装方式。）于是就开始了这篇速记中的一系列折腾。&lt;/p&gt;

&lt;h2 id=&quot;我的硬件和软件配置&quot;&gt;我的硬件和软件配置&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;硬件&lt;/strong&gt;：蓝厂 CPU、绿厂显卡、2*8 GiB 内存、小 SSD + 大 HDD 硬盘、iTX 主板，机龄不到两年，日常可以流畅使用。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;物理机操作系统&lt;/strong&gt;：Windows 10 Pro&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;虚拟机控制软件&lt;/strong&gt;：VirtualBox 6.10，短暂用过 5.12 版本&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;虚拟机镜像文件&lt;/strong&gt;：Arch Linux 2019.08.01, Windows 10, Fedora 30 Workstation&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;虚拟机托管软件-virtualbox&quot;&gt;虚拟机托管软件 VirtualBox&lt;/h2&gt;

&lt;p&gt;可以看一下编程随想的博客里的 &lt;a href=&quot;https://program-think.blogspot.com/2012/10/system-vm-0.html&quot;&gt;系列文章&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;我的手头一直有虚拟机托管软件，但是没有编程随想那样的需求，平时几乎用不到。（用虚拟机学 Linux？你可拉倒吧）不过之前很轻松地装过一些 Linux 的发行版，主要是 Fedora，所以没觉得这部分会有什么问题，直接开始了主线任务：下载 Arch Linux 的安装 ISO 镜像、检查校验和（FCIV，教程可以看 &lt;a href=&quot;https://program-think.blogspot.com/2013/02/file-integrity-check.html&quot;&gt;这里&lt;/a&gt;）、按照官网 &lt;a href=&quot;https://wiki.archlinux.org/index.php/Installation_guide&quot;&gt;安装指南&lt;/a&gt;（&lt;a href=&quot;https://wiki.archlinux.org/index.php/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)&quot;&gt;中文&lt;/a&gt;）操作，然后发现虚拟机连不上网 :-(&lt;/p&gt;

&lt;h3 id=&quot;问题虚拟机无法通过-nat-或-nat-network-模式联网&quot;&gt;问题：虚拟机无法通过 NAT 或 NAT Network 模式联网&lt;/h3&gt;

&lt;p&gt;具体表现为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ping www.google.com&lt;/code&gt; 报错：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; ping archlinux.org
&lt;span class=&quot;c&quot;&gt;# Temporary failure in name resolution&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;此时的网络设置没有修改过，就是几乎没有可选参数的 NAT 模式。&lt;/p&gt;

&lt;p&gt;第一反应当然是把报错的信息直接复制粘贴到 Google 里，然后看到了 &lt;a href=&quot;https://bbs.archlinux.org/viewtopic.php?id=237461&quot;&gt;这个帖子&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;回答用一种很有礼貌的方式表述了 RTFM，并给出了官方的 &lt;a href=&quot;https://wiki.archlinux.org/index.php/Network_configuration&quot;&gt;Network Configuration 页面&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;按照这个页面的步骤，因为我的 ISP 给的是动态的 IP，需要用DHCP，DHCP 是啥我都不知道，搞得我跪着下载了编程随想书单里的《Richard Stevens TCP-IP 详解》，解压后看着 3 卷一百多个 PDF 文件，默默关上了资源管理器……&lt;/p&gt;

&lt;p&gt;继续变换关键词搜索解决方案，在这期间改动过防火墙设置，又重置了一次；重装了两次旧版本 VirtualBox，因为第一次重装忘记删除配置信息（Windows 10 Pro 在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%userprofile%\.virtualbox&lt;/code&gt;，见&lt;a href=&quot;https://superuser.com/a/1429931&quot;&gt;这个帖子&lt;/a&gt;）；另外装了 Windows 10 和 Fedora 30 两个虚拟机；找来一个玩过 VirtualBox 而且打包票能解决问题的同学。确定了和虚拟机中的操作系统无关，VirtualBox 的 Bridge 桥接模式是可以联网的，但是总不能放任虚拟机的重要联网功能残废着啊 &lt;del&gt;（何况 NAT 模式在多重代理中不可或缺）&lt;/del&gt;，还是一筹莫展。&lt;/p&gt;

&lt;p&gt;就在折腾了这么几天之后，Windows 推送了一次更新，神奇的一幕发生了！更新之后，不论是 NAT 还是 NAT Network 模式，虚拟机都能正常上网，所以，可能真的是“天下本无事，庸人自扰之”吧……&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;解决方法：&lt;del&gt;吃饭睡觉打豆豆&lt;/del&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;安装-arch-linux&quot;&gt;安装 Arch Linux&lt;/h2&gt;

&lt;p&gt;继续按照官方指南进行安装，不得不说这份指南写的真的不好，至少对于新手是不友好的。一个典型的例子就是下面这句：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;你需要安装 Linux 引导程序以在安装后启动系统，你可以使用的的引导程序在 &lt;a href=&quot;&quot;&gt;启动加载器&lt;/a&gt; 中，请选择一个并且安装并配置它，比如 &lt;a href=&quot;&quot;&gt;GRUB&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;你该怎么办？公布一下正确答案：点击 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GRUB&lt;/code&gt; 那个链接，在一众分类中找到适用于你的计算机配置的那一节，目力忽略各种介绍，找到那一两行有用的命令。ε=( o｀ω′)ノ&lt;/p&gt;

&lt;p&gt;反正单看这一句，以我的理解能力，我是没办法正常通关，于是就有了下面硬盘格式化的问题。&lt;/p&gt;

&lt;h3 id=&quot;问题硬盘格式化不正确&quot;&gt;问题：硬盘格式化不正确&lt;/h3&gt;

&lt;p&gt;我是用 fdisk 进行的硬盘分区，在正常模式之下似乎找不到选择分区类型的选项，所以我的 EFI 分区也被当作了 Linux 文件系统，所以在很多个步骤之后报错，具体的报错信息已经不记得了。&lt;/p&gt;

&lt;p&gt;还好在编程随想的博客的评论区里见到过萌狼，一个 Arch Linux 用户，顺手去他家的博客逛了逛，知道他写过一系列关于 Arch 的博客。所以找到了《给 GNU/Linux 萌新的 Arch Linux 安装指南》，于是直接重建了一个空白虚拟机，按照新教程的流程走了一遍。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;解决方法：看&lt;a href=&quot;https://blog.yoitsu.moe/arch-linux/installing_arch_linux_for_complete_newbies.html&quot;&gt;萌狼的安装教程&lt;/a&gt;，用 cgdisk 分区&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;问题开机后显示-uefi-interactive-shell&quot;&gt;问题：开机后显示 UEFI interactive shell&lt;/h3&gt;

&lt;p&gt;本以为万事大吉，结果卸载掉安装 ISO 之后开机，总是会进入 UEFI interactive shell。输入 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;exit&lt;/code&gt; 之后重新开始倒计时，然后再次进入这个 shell……&lt;/p&gt;

&lt;p&gt;就在写这篇速记的时候，我找到了官方 wiki 的 &lt;a href=&quot;https://wiki.archlinux.org/index.php/GRUB_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E5%90%AF%E5%8A%A8%E6%97%B6%E8%BF%9B%E5%85%A5%E4%BA%86%E6%95%91%E6%80%A5%E6%8E%A7%E5%88%B6%E5%8F%B0&quot;&gt;这个条目&lt;/a&gt;，理论上应该是针对这个问题的，但是看一下就知道，并没有提供可操作的解决方案。&lt;/p&gt;

&lt;p&gt;通过 STFW，找到了这篇文章：《&lt;a href=&quot;https://cli.ee/archlinux-virtualbox&quot;&gt;如何在 VirtualBox 内安装 Arch Linux&lt;/a&gt;》，里面提到这个问题是由 VirtualBox 的 UEFI 引起的，同时提供了解决方法：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
Shell&amp;gt; bcfg boot dump &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;              &lt;span class=&quot;c&quot;&gt;# 查看启动的菜单&lt;/span&gt;
Shell&amp;gt; bcfg boot &lt;span class=&quot;nb&quot;&gt;rm &lt;/span&gt;0                 &lt;span class=&quot;c&quot;&gt;# 删除光驱启动目录&lt;/span&gt;
Shell&amp;gt; fs0:                           &lt;span class=&quot;c&quot;&gt;# 进入 EFI 分区&lt;/span&gt;
FS0:&lt;span class=&quot;se&quot;&gt;\&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt;                             &lt;span class=&quot;c&quot;&gt;# 查看目录，可以看到 EFI 目录&lt;/span&gt;
FS0:&lt;span class=&quot;se&quot;&gt;\&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;EFI&lt;span class=&quot;se&quot;&gt;\b&lt;/span&gt;oot                 &lt;span class=&quot;c&quot;&gt;# 在 EFI 目录下创建子目录&lt;/span&gt;
FS0:&lt;span class=&quot;se&quot;&gt;\&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ls &lt;/span&gt;EFI                         &lt;span class=&quot;c&quot;&gt;# 查看 EFI 目录，确认是否已创建子目录 boot&lt;/span&gt;
FS0:&lt;span class=&quot;se&quot;&gt;\&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cp &lt;/span&gt;EFI&lt;span class=&quot;se&quot;&gt;\g&lt;/span&gt;rub&lt;span class=&quot;se&quot;&gt;\g&lt;/span&gt;rubx64.efi EFI&lt;span class=&quot;se&quot;&gt;\b&lt;/span&gt;oot&lt;span class=&quot;se&quot;&gt;\b&lt;/span&gt;ootx64.efi &lt;span class=&quot;c&quot;&gt;# 复制 efi 文件并重命名&lt;/span&gt;
FS0:&lt;span class=&quot;se&quot;&gt;\&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;                           &lt;span class=&quot;c&quot;&gt;# 退出&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;执行完这一步，开机之后就可以看到 GRUB 的选择操作系统的界面了，因为只安装了 Arch Linux，我们只能看到两个选项，一个 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Arch Linux&lt;/code&gt; 正常启动，一个 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Advanced Options for Arch Linux&lt;/code&gt;。&lt;/p&gt;

&lt;h3 id=&quot;问题开机后无法进入图形界面&quot;&gt;问题：开机后无法进入图形界面&lt;/h3&gt;

&lt;p&gt;本以为万事大吉，结果开机之后选择 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*Arch Linux&lt;/code&gt; 选项，屏幕上只剩下两行字，然后没有其他反应。&lt;/p&gt;

&lt;p&gt;同样是上网搜了一下，发现如果按下 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl + Atl + F2&lt;/code&gt; 是可以进入命令行模式的，随便执行了几个命令，发现系统工作正常。用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;journalctl&lt;/code&gt; 看一下系统日志，发现在最后一段里经常出现高亮的几行里面，都有 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;drm&lt;/code&gt; 这个关键词，再次搜索，发现是和显卡相关的。因为是在虚拟机里，所以就去 VirtualBox 里康康有啥可能会导致问题的选项。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;解决方法：在 VirtualBox 的虚拟机显示设置界面，禁用3D加速&lt;/strong&gt;&lt;/p&gt;

&lt;hr class=&quot;slender&quot; /&gt;

&lt;p&gt;至此，所有的坑都已经踩完了，开机之后可以看到正常的登录界面，Duang~Duang~~~&lt;/p&gt;

&lt;figure&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;img src=&quot;/blog/assets/photos/arch.png&quot; /&gt;&lt;/figure&gt;
</description>
        <pubDate>Tue, 03 Sep 2019 00:00:00 +0000</pubDate>
        <link>mountaye.github.io/blog/articles/Arch-Linux-in-VirtualBox</link>
        <guid isPermaLink="true">mountaye.github.io/blog/articles/Arch-Linux-in-VirtualBox</guid>
        
        
        <category>post</category>
        
      </item>
    
  </channel>
</rss>
